//
//  MockDataGenerator.swift
//  Tracker
//
//  Created by –¢–∏–º—É—Ä –¢–∞–Ω–µ–µ–≤ on 27.08.2023.
//

import CoreData

final class MockDataGenerator {

    static func setupRecords(with context: NSManagedObjectContext?) {
        guard let context else {return}

        let checkRequest = TrackerCoreData.fetchRequest()
        let result = try! context.fetch(checkRequest)
        if result.count > 0 { return }

        struct TrackerRecord {
            let name: String
            let isRegular: Bool
            let emoji: String
            let color: String
            let schedule: String?
        }
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é 2
        let category2 = TrackerCategoryCoreData(context: context)
        category2.name = "–í—Ç–æ—Ä–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –ø—É—Å—Ç–∞—è"

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é 3
        let category3 = TrackerCategoryCoreData(context: context)
        category3.name = "–¢—Ä–µ—Ç—å—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è"

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é 1 –ø–æ—Å–ª–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 3
        let category1 = TrackerCategoryCoreData(context: context)
        category1.name = "–ü–µ—Ä–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è"

        let tracker = TrackerCoreData(context: context)
        tracker.name = "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è —Å–µ–≥–æ–¥–Ω—è"
        tracker.isRegular = true
        tracker.emoji = "üôÖ‚Äç‚ôÇÔ∏è"
        tracker.color = "ypColorSelection-6"
        tracker.schedule = "–ü–Ω,–í—Ç,–°—Ä,–ß—Ç,–ü—Ç,–°–±"
        tracker.category = category1

        let completed = TrackerRecordCoreData(context: context)
        completed.completedAt = Date()
        completed.tracker = tracker

        // –∞ —Ç—Ä–µ–∫–µ—Ä—ã –¥–æ–±–∞–≤–ª—è–µ–º —Å–Ω–∞—á–∞–ª–∞ –¥–ª—è –ø–µ—Ä–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ -
        // –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ —Ç—Ä–µ–∫–µ—Ä–∞–º
        let _ = [TrackerRecord(name: "–†–µ–≥—É–ª—è—Ä–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ 1", isRegular: true, emoji: "üôÇ", color: "ypColorSelection-1", schedule: "–ü–Ω,–°—Ä,–í—Å"),
                 TrackerRecord(name: "–ù–µ—Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ 1", isRegular: false, emoji: "üôÉ", color: "ypColorSelection-2", schedule: nil),
                 TrackerRecord(name: "–†–µ–≥—É–ª—è—Ä–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ 2", isRegular: true, emoji: "üòù", color: "ypColorSelection-3", schedule: "–í—Ç,–ü–Ω,–í—Å")]
            .enumerated()
            .map { index, raw in
                let tracker = TrackerCoreData(context: context)
                tracker.name = raw.name
                tracker.isRegular = raw.isRegular
                tracker.emoji = raw.emoji
                tracker.color = raw.color
                tracker.schedule = raw.schedule
                tracker.category = category1
                return tracker
        }

        // –¥–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–µ–∫–µ—Ä—ã –¥–ª—è —Ç—Ä–µ—Ç—å–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        let _ = [TrackerRecord(name: "–°–æ–±—ã—Ç–∏–µ —Ç—Ä–µ—Ç—å–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 1, —Ä–µ–≥—É–ª—è—Ä", isRegular: true, emoji: "ü´∂", color: "ypColorSelection-4", schedule: "–ü–Ω"),
                 TrackerRecord(name: "–Ω–µ—Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ, –∫–∞—Ç–µ–≥–æ—Ä–∏—è 3 ", isRegular: false, emoji: "üëç", color: "ypColorSelection-5", schedule: nil)]
            .enumerated()
            .map { index, raw in
                let tracker = TrackerCoreData(context: context)
                tracker.name = raw.name
                tracker.isRegular = raw.isRegular
                tracker.emoji = raw.emoji
                tracker.color = raw.color
                tracker.schedule = raw.schedule
                tracker.category = category3
                return tracker
        }

        try! context.save()
    }
}
